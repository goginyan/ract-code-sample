{"version":3,"sources":["config/config.js","services/api/api.js","services/api/categoryApi.js","services/helpers/helper.js","components/Basket.js","components/Navbar.js","redux/selectors.js","redux/actions.js","layout/Header.js","components/Card.js","containers/Category/Product/IndexPage.js","services/helpers/screen.js","services/api/productApi.js","containers/Category/Product/components/LoadImage.js","containers/Category/Product/helper-actions.js","components/Form/Input.js","components/Close.js","components/RemoveBox.js","containers/Category/Product/RightSidebar.js","containers/Category/Product/ShowPage.js","containers/Category/Product/index.js","containers/Category/Product/Product.js","containers/Category/Category.js","containers/Category/index.js","containers/Category/CategorySwitch.js","App.js","serviceWorker.js","redux/reducers/products.js","redux/reducers/categories.js","redux/reducers/baskets.js","redux/reducers/components.js","redux/reducers/interfaces.js","redux/reducers/index.js","redux/store.js","index.js","images/svg/logo.svg","images/svg/menu.svg","images/svg/add.svg","images/svg/sort.svg","images/svg/add_alternative.svg","images/svg/custom.svg","images/svg/message.svg","images/svg/transfer.svg","images/svg/plus.svg","images/svg/minus-s.svg","images/svg/left-arrow.svg","images/svg/dot.svg","images/svg/minus.svg"],"names":["apiUrl","defaultHeaders","url","numberFormat","number","Intl","NumberFormat","style","currency","format","Basket","props","state","className","carts","sumPrice","this","onClick","enableBackground","viewBox","xmlns","d","reduce","a","b","price","Component","defaultProps","Navbar","menu_open","menu_items","handleCardButtonClick","bind","rightSidebarRef","current","showCart","alert","self","fetch","method","headers","then","response","json","data","success","payload","categories","addCategories","window","addEventListener","e","target","closest","setState","hideCart","key","indexOf","src","menu","width","alt","sort","href","add","add_alternative","custom","message","transfer","NavLink","to","logo","product","title","baskets","connect","store","products","selectedProduct","getSelectedProduct","list","components","rightSidebar","type","Header","Card","header","children","img","link","bodyClassName","text","cardStyle","IndexPage","variants","map","id","Link","categoryId","textDecoration","color","getProductFirstImage","getResponsiveKonvaSizes","size","height","scale","offset","secren","innerWidth","getTypeScreen","x","y","prefix","LoadImage","handleLoad","image","loadImage","oldProps","removeEventListener","Image","name","opacity","clickCallback","onMouseEnter","onMouseEnterCallback","onMouseLeave","onMouseLeaveCallback","ref","node","imageNode","findSelectedOrFirst","arr","item","forEach","obj","selected","Input","inputClassName","labelClassName","label","labelFor","labelStart","placeholder","value","min","max","onChange","input","htmlFor","wrapperDiv","renderInput","Close","display","xmlnsXlink","version","xmlSpace","RemoveBox","fill","RightSidebar","isShownCard","checkoutCallback","handleCartQuantityChangeCallback","removeCardByIdCallback","removeKonvaProductImageCallback","totalPrice","cart","Number","quantity","left","isBaseProduct","interfaces","find","interface_id","product_title","data-key","minus","dataset","plus","product_id","sideBarCards","forwardRef","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","Mousewheel","ShowPage","initialState","existsProductPlusPounts","interfacesSwiper","createRef","productsSwiper","konvaStage","setResponsiveKonvaProduct","handlePlugItemVariantChange","handleCartQuantityChange","removeKonvaProductImage","removeProductPlusPoints","handleRangePlugSlider","addProductImage","shopifyRedirect","removeCardById","client","Client","buildClient","domain","storefrontAccessToken","shopifyData","sideBarCarts","variant","variantId","shopify_id","checkoutId","checkout","create","addLineItems","location","assign","webUrl","catch","err","nextProps","pathname","prepareData","setPositionProductSwiperBtn","setSelectedPlug","selectedPlug","swiper","parent_detals","getBoundingClientRect","on","position","slide_width","prev","next","right","addBaskets","addRef","addSelectProducts","plugs","plug","plugProduct","baseProduct","coordinates","pivot","coordinate_x","coordinate_y","productKonva","images","konvaImage","category","push","plugName","dot","filter","parent","document","getElementById","getClientRects","parent_width","parent_height","product_width","product_height","offsetX","offsetY","konvaSizes","stage","show","Promise","all","match","params","productId","addInterfaces","productCoordinates","calculateCoordinates","imageIndex","findIndex","splice","cartIndex","productPlusIndex","i","selectedPlugProduct","plugSliderCurrentIndex","p","slideToLoop","setProductPlusPoints","body","cursor","productKonvaImage","cartId","imageId","productImageIndex","image_id","length","index","plugRef","slickGoTo","productSliderCurrentIndex","slideTo","sideBarCartsIndex","spaceBetween","slidesPerView","centeredSlides","centeredSlidesBounds","loop","roundLengths","slideToClickedSlide","onSlideChange","realIndex","breakpoints","1199","handleRangeProductSlider","autoHeight","direction","mousewheel","invert","releaseOnEdges","sensitivity","speed","568","768","navigation","nextEl","prevEl","getSelectedVariant","checkImageSelection","background","checkProductKonva","renderPlugs","renderSelectedPlugItems","handleProductPlugClick","handleMouseEnter","handleMouseLeave","Product","pageType","Category","handleClick","options","getOptionLabel","option","getOptionValue","CategorySwitch","App","BrowserRouter","Switch","Route","exact","path","render","Boolean","hostname","combineReducers","action","createStore","rootReducer","ReactDOM","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d036651e.chunk.js","sourcesContent":["const apiUrl = 'http://167.86.68.216:81/api'\n\nexport default apiUrl;","const defaultHeaders = {\r\n  'Content-Type': 'application/json',\r\n  'Accept': 'application/json',\r\n};\r\n\r\nexport { defaultHeaders };","import  apiUrl  from \"../../config/config\";\r\nimport { defaultHeaders } from \"./api\";\r\n\r\nconst url = `${apiUrl}/v1/categories`;\r\n\r\nconst index = () => (\r\n  fetch(url, {\r\n    method: 'GET',\r\n    headers: defaultHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.success && data.payload.categories) {\r\n        return data.payload.categories;\r\n      }\r\n    })\r\n);\r\n\r\nconst show = (id) => (\r\n  fetch(`${url}/${id}`, {\r\n    method: 'GET',\r\n    headers: defaultHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.success && data.payload.category) {\r\n        return data.payload.category;\r\n      }\r\n    })\r\n);\r\n\r\nexport {\r\n  index,\r\n  show,\r\n};","const numberFormat = (number) => {\r\n  return new Intl.NumberFormat('de-DE', { style: 'currency', currency: 'EUR' }).format(number)\r\n};\r\n\r\n\r\nexport { numberFormat };","import React, {Component} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport './basket.scss';\r\nimport {numberFormat} from \"../services/helpers/helper\";\r\n\r\n\r\nclass Basket extends Component {\r\n    static defaultProps = {\r\n        className: 'basket',\r\n        carts: []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            className: 'basket',\r\n            carts: [],\r\n            sumPrice: 0,\r\n        };\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.carts !== state.carts) {\r\n            return {\r\n                carts: state.carts,\r\n                className: 'basket',\r\n                sumPrice: numberFormat(props.carts.reduce(function (a, b) {\r\n                    return a + b.price;\r\n                }, 0))\r\n            };\r\n        }\r\n\r\n        return state;\r\n    }\r\n\r\n    render() {\r\n        const {className, onClick} = this.props;\r\n\r\n        return (\r\n            <span className={className} onClick={onClick}>\r\n       <span>\r\n         <svg enableBackground=\"new 0 0 512 512\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\r\n         <g><path\r\n             d=\"m472 452c0 11.046-8.954 20-20 20h-20v20c0 11.046-8.954 20-20 20s-20-8.954-20-20v-20h-20c-11.046 0-20-8.954-20-20s8.954-20 20-20h20v-20c0-11.046 8.954-20 20-20s20 8.954 20 20v20h20c11.046 0 20 8.954 20 20zm0-312v192c0 11.046-8.954 20-20 20s-20-8.954-20-20v-172h-40v60c0 11.046-8.954 20-20 20s-20-8.954-20-20v-60h-192v60c0 11.046-8.954 20-20 20s-20-8.954-20-20v-60h-40v312h212c11.046 0 20 8.954 20 20s-8.954 20-20 20h-232c-11.046 0-20-8.954-20-20v-352c0-11.046 8.954-20 20-20h60.946c7.945-67.477 65.477-120 135.054-120s127.109 52.523 135.054 120h60.946c11.046 0 20 8.954 20 20zm-121.341-20c-7.64-45.345-47.176-80-94.659-80s-87.019 34.655-94.659 80z\"/></g></svg>\r\n       </span>\r\n                <span className=\"basket-price\">{this.state.sumPrice !== 0 && this.state.sumPrice}</span>\r\n      </span>\r\n        );\r\n    }\r\n}\r\n\r\nBasket.propTypes = {\r\n    className: PropTypes.string,\r\n    width: PropTypes.string,\r\n    height: PropTypes.string,\r\n};\r\n\r\nexport default Basket;","import React, {Component} from 'react';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\nimport logo from \"../images/svg/logo.svg\";\r\nimport menu from \"../images/svg/menu.svg\";\r\nimport add from \"../images/svg/add.svg\";\r\nimport minus from \"../images/svg/minus.svg\";\r\nimport sort from \"../images/svg/sort.svg\";\r\nimport add_alternative from \"../images/svg/add_alternative.svg\";\r\nimport custom from \"../images/svg/custom.svg\";\r\nimport message from \"../images/svg/message.svg\";\r\nimport transfer from \"../images/svg/transfer.svg\";\r\n\r\nimport '../sass/menu.scss'\r\nimport {connect} from \"react-redux\";\r\nimport {getSelectedProduct} from \"../redux/selectors\";\r\nimport {addCategories} from \"../redux/actions\";\r\n\r\nimport * as categoryApi from \"../services/api/categoryApi\";\r\nimport Basket from \"./Basket\";\r\n\r\nconst mapStateToProps = state => {\r\n    const product = getSelectedProduct(state);\r\n    const categories = state.categories.list ? state.categories.list : {};\r\n    const baskets = state.baskets.list;\r\n    const rightSidebarRef =state.components.list.rightSidebar?state.components.list.rightSidebar:{};\r\n    return {product, categories, baskets, rightSidebarRef};\r\n};\r\n\r\nclass Navbar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            menu_open: false,\r\n            menu_items: [],\r\n        };\r\n\r\n\r\n        this.handleCardButtonClick = this.handleCardButtonClick.bind(this);\r\n    }\r\n\r\n    handleCardButtonClick() {\r\n        this.props.rightSidebarRef.current ? this.props.rightSidebarRef.current.showCart(): alert('cart is empty');\r\n    }\r\n\r\n    componentDidMount() {\r\n        const self = this;\r\n\r\n        categoryApi.index().then((categories) => {\r\n            this.props.addCategories(categories);\r\n        });\r\n\r\n        window.addEventListener('click', function (e) {\r\n\r\n            if (!e.target.closest('.menu-list') && !e.target.closest('.menu-btn')) {\r\n                self.setState(state => {\r\n                    state.menu_open = false;\r\n                    return state;\r\n                })\r\n            }if (!e.target.closest('.right-side-bar') && !e.target.closest('.basket') && !e.target.closest('.remove-basket')) {\r\n                self.props.rightSidebarRef.current && self.props.rightSidebarRef.current.hideCart();\r\n            }\r\n        })\r\n    }\r\n\r\n    checkMenuItemsSelect(key) {\r\n        return this.state.menu_items.indexOf(key) === -1\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item ml-2 mr-2 d-flex\">\r\n                        <button onClick={() => this.setState((state) => {\r\n                            state.menu_open = !state.menu_open;\r\n                            return state;\r\n                        })} className=\"menu-btn\">\r\n                            <img src={menu} width={35} alt=\"\"/>\r\n                        </button>\r\n                        <div className={`menu-list default-scrollbar ${this.state.menu_open && 'show'}`}>\r\n                            {/*{this.props.categories.length ? (*/}\r\n                            {/*    <ul className=\"list-unstyled pl-3\">*/}\r\n                            {/*        {*/}\r\n                            {/*            this.props.categories.map((item, key) => (*/}\r\n                            {/*                    <li onClick={() => this.setState((state) => {*/}\r\n                            {/*                        if (this.checkMenuItemsSelect(key)) {*/}\r\n                            {/*                            state.menu_items.push(key)*/}\r\n                            {/*                        } else state.menu_items.splice(state.menu_items.indexOf(key), 1);*/}\r\n                            {/*                        return state;*/}\r\n\r\n                            {/*                    })}*/}\r\n                            {/*                        key={key}*/}\r\n                            {/*                        className={`p-2 text-uppercase cursor-pointer ${!item.products.length ? 'disabled' : null}`}>*/}\r\n                            {/*                    <span className=\"d-flex align-items-center\">*/}\r\n                            {/*                        {item.products.length ? (*/}\r\n                            {/*                            this.checkMenuItemsSelect(key) ? (*/}\r\n                            {/*                                <img src={add} width={20} alt=\"\"/>*/}\r\n                            {/*                            ) : (<img src={minus} width={20} alt=\"\"/>)*/}\r\n\r\n                            {/*                        ) : null}*/}\r\n                            {/*                        <span className=\"pl-3\"> {item.name} </span>*/}\r\n                            {/*                        {item.products.length ? (*/}\r\n                            {/*                            <span className=\"pl-3 show-all\"> show all </span>) : null}*/}\r\n                            {/*                    </span>*/}\r\n                            {/*                        {item.products.length ?*/}\r\n                            {/*                            (*/}\r\n                            {/*                                <ul className={`list-unstyled item-lists menu-products ${(this.state.menu_items.indexOf(key) !== -1) && 'show'}`}>*/}\r\n                            {/*                                    {*/}\r\n                            {/*                                        item.products.map((product, key) => (*/}\r\n                            {/*                                            <li key={key} className=\"media\">*/}\r\n                            {/*                                                <Link*/}\r\n                            {/*                                                    onClick={() => this.setState((state) => {*/}\r\n                            {/*                                                        state.menu_open = !state.menu_open;*/}\r\n                            {/*                                                        return state;*/}\r\n                            {/*                                                    })}*/}\r\n                            {/*                                                    to={`/category/${item.id}/product/${product.id}`}*/}\r\n                            {/*                                                    style={{textDecoration: 'none'}}*/}\r\n\r\n                            {/*                                                    className=\"d-inline-block\">*/}\r\n                            {/*                                                    <div className=\"media-body\">*/}\r\n                            {/*                                                        <img className=\"img-product\"*/}\r\n                            {/*                                                             src={product.variants[0] ? product.variants[0].src : null}*/}\r\n                            {/*                                                             alt=\"\"/>*/}\r\n                            {/*                                                        <span*/}\r\n                            {/*                                                            className=\"mt-0 mb-1\">{product.title}</span>*/}\r\n                            {/*                                                    </div>*/}\r\n                            {/*                                                </Link>*/}\r\n                            {/*                                            </li>*/}\r\n                            {/*                                        ))*/}\r\n                            {/*                                    }*/}\r\n                            {/*                                </ul>*/}\r\n                            {/*                            ) : null}*/}\r\n\r\n                            {/*                    </li>*/}\r\n                            {/*                )*/}\r\n                            {/*            )*/}\r\n                            {/*        }*/}\r\n                            {/*    </ul>*/}\r\n                            {/*) : null}*/}\r\n\r\n                            <ul className=\"list-unstyled pl-3\">\r\n                                <li className={`p-2 text-uppercase cursor-pointer`}>\r\n                                    <span className=\"d-flex align-items-center\">\r\n                                        <img src={sort} width={20} alt=\"\"/>\r\n                                        <a href=\"https://umbrellaarmory.eu/pages/armory\" className=\"pl-3\"> Armory </a>\r\n                                    </span>\r\n                                </li>\r\n                                <li className={`p-2 text-uppercase cursor-pointer disabled`}>\r\n                                    <span className=\"d-flex align-items-center\">\r\n                                        <img src={add} width={20} alt=\"\"/>\r\n                                        <a  className=\"pl-3\"> Project </a>\r\n                                    </span>\r\n                                </li>\r\n                                <li className={`p-2 text-uppercase cursor-pointer`}>\r\n                                    <span className=\"d-flex align-items-center\">\r\n                                        <img src={add_alternative} width={20} alt=\"\"/>\r\n                                        <a href=\"https://umbrellaarmory.eu/pages/ownership\" className=\"pl-3\"> Ownership </a>\r\n                                    </span>\r\n                                </li>\r\n                                <li className={`p-2 text-uppercase cursor-pointer`}>\r\n                                    <span className=\"d-flex align-items-center\">\r\n                                        <img src={custom} width={20} alt=\"\"/>\r\n                                        <a href=\"https://umbrellaarmory.eu/pages/Custom\" className=\"pl-3\"> Custom </a>\r\n                                    </span>\r\n                                </li>\r\n                                <li className={`p-2 text-uppercase cursor-pointer`}>\r\n                                    <span className=\"d-flex align-items-center\">\r\n                                        <img src={message} width={20} alt=\"\"/>\r\n                                        <a href=\"https://umbrellaarmory.eu/pages/support\" className=\"pl-3\"> Contact </a>\r\n                                    </span>\r\n                                </li>\r\n                                <li className={`p-2 text-uppercase cursor-pointer`}>\r\n                                    <span className=\"d-flex align-items-center\">\r\n                                        <img src={transfer} width={20} alt=\"\"/>\r\n                                        <a href=\"https://umbrellaarmory.eu/pages/distribution\" className=\"pl-3\"> Wholesale </a>\r\n                                    </span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink to={`/`} className=\"navbar-brand\">\r\n                            <img src={logo} className=\"img-fluid\" width={80} alt=\"\"/>\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item\">\r\n                        {\r\n                            this.props.product.title ? (\r\n                                <span className=\"product-name\"> {this.props.product.title}</span>\r\n                            ) : null\r\n                        }\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                         <span onClick={this.handleCardButtonClick}\r\n                               className=\"text-dark show-card-button cursor-pointer\">\r\n                                  <Basket carts={this.props.baskets}/>\r\n                          </span>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, {addCategories})(Navbar);\r\n","\nexport const getSelectedProduct = store =>\n    store && store.products.selectedProduct ? store.products.selectedProduct : {};\n\n","\nexport const addSelectProducts = selectedProduct => ({\n    type: \"ADD_SELECT_PRODUCT\",\n    selectedProduct\n});\n\nexport const addInterfaces = interfaces => ({\n    type: \"ADD_INTERFACES\",\n    interfaces\n});\n\nexport const addCategories = categories => ({\n    type: \"ADD_CATEGORIES\",\n    categories\n});\n\nexport const addBaskets = baskets => ({\n    type: \"ADD_BASKETS\",\n    baskets\n});\n\nexport const addRef = (name, ref) => ({\n    type: \"ADD_REF\",\n    name,\n    ref\n});\n","import React, { Component } from 'react';\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <Navbar/>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Card extends Component {\r\n  static defaultProps = {\r\n    title: null,\r\n    link: null,\r\n    img: null,\r\n    cardStyle: null,\r\n    className: '',\r\n    bodyClassName: '',\r\n  };\r\n\r\n  render() {\r\n    const {width, header, children, img, title, link, className, bodyClassName} = this.props;\r\n\r\n    return (\r\n      <div className={`card ${className}`} style={{width}}>\r\n\r\n\r\n        {img && <img className=\"card-img-top img-fluid\"\r\n                     src={typeof img === 'string' ? img : img.src}\r\n                     alt={img.alt || ''}/>}\r\n\r\n        {children && <div className={`card-body ${bodyClassName}`}>\r\n          {title && <h5 className=\"card-title\">{title}</h5>}\r\n\r\n          {children}\r\n\r\n          {link && <a href={link.href} className=\"btn btn-primary\">{link.text}</a>}\r\n        </div>}\r\n\r\n          {header && <div className=\"p-3\">\r\n              {header}\r\n          </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCard.propTypes = {\r\n  width: PropTypes.string,\r\n  title: PropTypes.string,\r\n  img: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  className: PropTypes.string,\r\n  bodyClassName: PropTypes.string,\r\n};\r\n\r\nexport default Card;","import React, { Component } from 'react';\r\nimport Card from \"../../../components/Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport './product.scss';\r\n\r\nclass IndexPage extends Component {\r\n  static defaultProps = {\r\n    products: [],\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n  }\r\n\r\n  getProductFirstImage(product) {\r\n    const firstIndex = 0;\r\n    return product.variants[firstIndex] ? product.variants[firstIndex].src : '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid index-product\">\r\n        <div className=\"row\">\r\n          {this.props.products.map(product =>\r\n            <div className=\"col-lg-3 col-md-6 col-12 product mt-3\" key={product.id}>\r\n              <Link to={`/category/${this.props.categoryId}/product/${product.id}`}\r\n                    style={{textDecoration: 'none', color: '#000000'}} className=\"d-inline-block\">\r\n                <Card\r\n                  className=\"product-card\"\r\n                  img={this.getProductFirstImage(product)}\r\n                  header={product.title}\r\n                />\r\n              </Link>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nIndexPage.propTypes = {\r\n  products: PropTypes.array,\r\n  categoryId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n};\r\n\r\nexport default IndexPage;\r\n","const getTypeScreen = (width) => {\r\n    let typeScreen = '',\r\n        secren = width? width : window.innerWidth;\r\n\r\n    if (secren <= 576) {\r\n        typeScreen = 'extra-small';\r\n    } else if (secren >= 576 && secren <= 768) {\r\n        typeScreen = 'small';\r\n    } else if (secren >= 768 && secren <= 992) {\r\n        typeScreen = 'medium';\r\n    } else if (secren >= 992 && secren <= 1200) {\r\n        typeScreen = 'large';\r\n    } else {\r\n        typeScreen = 'extra-large';\r\n    }\r\n\r\n    return typeScreen;\r\n};\r\n\r\nconst getResponsiveKonvaSizes = (width) => {\r\n    let size = {width: null, height: null, scale: null, offset: null};\r\n\r\n    switch (getTypeScreen(width)) {\r\n        case 'extra-large' : {\r\n            size.width = 950;\r\n            size.height = 250;\r\n            size.scale = {x: 0.12, y: 0.12};\r\n            size.offset = {x: -1300, y: -450};\r\n            break;\r\n        }\r\n        case 'large' : {\r\n            size.width = 800;\r\n            size.height = 250;\r\n            size.scale = {x: 0.13, y: 0.13};\r\n            size.offset = {x: -600, y: -450};\r\n            break;\r\n        }\r\n        case 'medium' : {\r\n            size.width = 670;\r\n            size.height = 250;\r\n            size.scale = {x: 0.12, y: 0.12};\r\n            size.offset = {x: -800, y: -450};\r\n            break;\r\n        }\r\n        case 'small' : {\r\n            size.width = 400;\r\n            size.height = 250;\r\n            size.scale = {x: 0.07, y: 0.07};\r\n            size.offset = {x: -400, y: -600};\r\n            break;\r\n        }\r\n        case 'extra-small' : {\r\n            size.width = 320;\r\n            size.height = 150;\r\n            size.scale = {x: 0.046, y: 0.046};\r\n            size.offset = {x: -730, y: -700};\r\n            break;\r\n        }\r\n        default :\r\n            return;\r\n    }\r\n\r\n    return size;\r\n};\r\n\r\nexport {getTypeScreen, getResponsiveKonvaSizes};\r\n","import  apiUrl  from \"../../config/config\";\r\nimport { defaultHeaders } from \"./api\";\r\n\r\nconst prefix = `${apiUrl}/v1/products`;\r\n\r\nconst showProduct = (id) => (\r\n  fetch(`${prefix}/${id}`, {\r\n    method: 'GET',\r\n    headers: defaultHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.success && data.payload.product) {\r\n        return data.payload.product;\r\n      }\r\n    })\r\n);\r\n\r\nconst getProductPlugById = (product_id, plug_id) => (\r\n  fetch(`${prefix}/${product_id}/${plug_id}`, {\r\n    method: 'GET',\r\n    headers: defaultHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.success && data.payload) {\r\n        return data.payload.plug;\r\n      }\r\n    })\r\n);\r\n\r\nconst getProductPlugs = (product_id) => (\r\n  fetch(`${prefix}/${product_id}/interfaces`, {\r\n    method: 'GET',\r\n    headers: defaultHeaders,\r\n  })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      if (data.success && data.payload.interfaces) {\r\n        return data.payload.interfaces;\r\n      }\r\n    })\r\n);\r\n\r\nexport {\r\n  showProduct,\r\n  getProductPlugById,\r\n  getProductPlugs,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { Image } from \"react-konva\";\r\n\r\nclass LoadImage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      image: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadImage();\r\n  }\r\n\r\n  componentDidUpdate(oldProps) {\r\n    if (oldProps.src !== this.props.src) {\r\n      this.loadImage();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.image.removeEventListener('load', this.handleLoad);\r\n  }\r\n\r\n  loadImage() {\r\n    this.image = new window.Image();\r\n    this.image.src = this.props.src;\r\n    this.image.addEventListener('load', this.handleLoad);\r\n  }\r\n\r\n  handleLoad = () => {\r\n    this.setState({\r\n      image: this.image\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Image\r\n        name={this.props.name}\r\n        image={this.state.image}\r\n        x={this.props.x}\r\n        y={this.props.y}\r\n        opacity={this.props.opacity}\r\n        onClick={this.props.clickCallback}\r\n        onMouseEnter={this.props.onMouseEnterCallback}\r\n        onMouseLeave={(e) => this.props.onMouseLeaveCallback(e)}\r\n        ref={node => {\r\n          this.imageNode = node;\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoadImage;\r\n","const findSelectedOrFirst = (arr) => {\r\n\r\n  let item = arr[0];\r\n  arr.forEach((obj) => {\r\n    if (obj.selected) {\r\n      item = obj;\r\n    }\r\n  });\r\n  return item;\r\n};\r\n\r\n\r\nexport { findSelectedOrFirst };","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Input extends Component {\r\n  static defaultProps = {\r\n    wrapperDiv: false,\r\n    className: 'form-group',\r\n    labelClassName: '',\r\n    inputClassName: '',\r\n    placeholder: null,\r\n    value: null,\r\n    label: null,\r\n    labelFor: null,\r\n    labelStart: true,\r\n    type: 'text',\r\n    min: null,\r\n    max: null,\r\n  }\r\n\r\n  renderInput() {\r\n    const {\r\n      inputClassName,\r\n      labelClassName,\r\n      label,\r\n      labelFor,\r\n      labelStart,\r\n      type,\r\n      placeholder,\r\n      value,\r\n      min,\r\n      max,\r\n      onChange,\r\n    } = this.props;\r\n\r\n    const input = <input\r\n      id={labelFor && labelFor}\r\n      className={inputClassName}\r\n      type={type}\r\n      value={value}\r\n      placeholder={placeholder}\r\n      onChange={onChange}\r\n      min={min}\r\n      max={max}\r\n    />;\r\n\r\n    const labelSeparatelyMode = !!(labelFor);\r\n\r\n    if (!label) {\r\n      return input;\r\n    }\r\n\r\n    if (labelSeparatelyMode) {\r\n      return (\r\n        <>\r\n          <label htmlFor={labelFor} className={labelClassName}>{label}</label>\r\n          {input}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <label className={labelClassName}>\r\n        {labelStart && label}{input}{!labelStart && label}\r\n      </label>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {className, wrapperDiv} = this.props;\r\n\r\n    return wrapperDiv ?\r\n      <div className={className}>{this.renderInput()}</div> :\r\n      this.renderInput();\r\n  }\r\n}\r\n\r\nInput.propTypes = {\r\n  className: PropTypes.string,\r\n  labelClassName: PropTypes.string,\r\n  inputClassName: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  label: PropTypes.string,\r\n  labelFor: PropTypes.string,\r\n  labelStart: PropTypes.bool,\r\n  type: PropTypes.string,\r\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Close extends Component {\r\n  static defaultProps = {\r\n    width: '25px',\r\n    height: '25px',\r\n    display: 'inline-block',\r\n    className: '',\r\n  }\r\n\r\n  render() {\r\n    const {className, width, height, display, onClick} = this.props;\r\n\r\n    return (\r\n      <span className={className} style={{width, height, display}} onClick={onClick}>\r\n         <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\"\r\n              x=\"0px\" y=\"0px\" viewBox=\"0 0 174.239 174.239\" xmlSpace=\"preserve\">\r\n          <g>\r\n            <path\r\n              d=\"M87.12,0C39.082,0,0,39.082,0,87.12s39.082,87.12,87.12,87.12s87.12-39.082,87.12-87.12S135.157,0,87.12,0z M87.12,159.305   c-39.802,0-72.185-32.383-72.185-72.185S47.318,14.935,87.12,14.935s72.185,32.383,72.185,72.185S126.921,159.305,87.12,159.305z\"/>\r\n            <path\r\n              d=\"M120.83,53.414c-2.917-2.917-7.647-2.917-10.559,0L87.12,76.568L63.969,53.414c-2.917-2.917-7.642-2.917-10.559,0   s-2.917,7.642,0,10.559l23.151,23.153L53.409,110.28c-2.917,2.917-2.917,7.642,0,10.559c1.458,1.458,3.369,2.188,5.28,2.188   c1.911,0,3.824-0.729,5.28-2.188L87.12,97.686l23.151,23.153c1.458,1.458,3.369,2.188,5.28,2.188c1.911,0,3.821-0.729,5.28-2.188   c2.917-2.917,2.917-7.642,0-10.559L97.679,87.127l23.151-23.153C123.747,61.057,123.747,56.331,120.83,53.414z\"/>\r\n          </g>\r\n        </svg>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nClose.propTypes = {\r\n  className: PropTypes.string,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  display: PropTypes.string,\r\n};\r\n\r\nexport default Close;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass RemoveBox extends Component {\r\n  static defaultProps = {\r\n    width: '25px',\r\n    height: '25px',\r\n    display: 'inline-block',\r\n    className: '',\r\n  }\r\n\r\n  render() {\r\n    const {className, width, height, display, onClick} = this.props;\r\n\r\n    return (\r\n      <span className={className} style={{width, height, display}} onClick={onClick}>\r\n       <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\"\r\n            viewBox=\"0 0 512 512\" style={{enableBackground: 'new 0 0 512 512'}} xmlSpace=\"preserve\">\r\n        <path style={{fill: '#FF3636'}}\r\n              d=\"M256,0C115.3,0,0,115.3,0,256s115.3,256,256,256s256-115.3,256-256S396.7,0,256,0z\"/>\r\n        <path style={{fill: '#F40000'}} d=\"M512,256c0,140.7-115.3,256-256,256V0C396.7,0,512,115.3,512,256z\"/>\r\n        <rect x=\"106\" y=\"226\" style={{fill: '#E7E7E7'}} width=\"300\" height=\"60\"/>\r\n        <rect x=\"256\" y=\"226\" style={{fill: '#D3D3D8'}} width=\"150\" height=\"60\"/>\r\n        </svg>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nRemoveBox.propTypes = {\r\n  className: PropTypes.string,\r\n  width: PropTypes.string,\r\n  height: PropTypes.string,\r\n  display: PropTypes.string,\r\n};\r\n\r\nexport default RemoveBox;","import React, { Component } from 'react';\r\nimport Input from \"../../../components/Form/Input\";\r\nimport Card from \"../../../components/Card\";\r\nimport Close from \"../../../components/Close\";\r\nimport PropTypes from 'prop-types';\r\nimport RemoveBox from \"../../../components/RemoveBox\";\r\nimport {numberFormat} from \"../../../services/helpers/helper\";\r\n\r\n// svg images\r\nimport plus from \"../../../images/svg/plus.svg\"\r\nimport minus from \"../../../images/svg/minus-s.svg\"\r\nimport left from \"../../../images/svg/left-arrow.svg\"\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = state => {\r\n  const interfaces = state.interfaces;\r\n  return  {interfaces}\r\n};\r\n\r\nclass RightSidebar extends Component {\r\n  static defaultProps = {\r\n    carts: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isShownCard: false,\r\n      carts: [],\r\n    };\r\n\r\n    this.hideCart = this.hideCart.bind(this);\r\n    this.showCart = this.showCart.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.sideBarCards !== state.carts) {\r\n      // let $array = [];\r\n      // props.carts.forEach( cart => {\r\n      //   let $interface =  props.interfaces.find( item =>\r\n      //       item.id === cart.interface_id\r\n      //   )\r\n      //   if( $interface ){\r\n      //     $array[$interface.id]  = cart\r\n      //   }else {\r\n      //     $array[0] = cart\r\n      //   }\r\n      // })\r\n\r\n      return {\r\n        carts: props.carts,\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  showCart() {\r\n    this.setState({\r\n      isShownCard: true,\r\n    });\r\n  }\r\n\r\n  hideCart() {\r\n    this.setState({\r\n      isShownCard: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {carts, isShownCard} = this.state;\r\n    const {checkoutCallback, handleCartQuantityChangeCallback, removeCardByIdCallback, removeKonvaProductImageCallback} = this.props;\r\n    const totalPrice = numberFormat(carts.reduce((totalPrice, cart) =>\r\n        totalPrice + Number(cart.price) * cart.quantity,\r\n        0))\r\n\r\n    return (\r\n      <div className={`h-100 right-side-bar position-fixed bg-white overflow-x-scroll default-scrollbar ${isShownCard ? 'show' : null}`}>\r\n        <div className=\"d-flex align-items-center\">\r\n          <div className=\"cursor-pointer d-flex align-items-center border-bottom\"  onClick={this.hideCart} >\r\n            <img src={left} className=\"svg-icon\" alt=\"\"/>\r\n            <h3 className=\"d-inline-block mb-0 ml-2\">Cart</h3>\r\n          </div>\r\n          <button className=\"btn btn-primary ml-auto\" onClick={checkoutCallback}>Checkout {totalPrice}</button>\r\n        </div>\r\n        {\r\n          carts.map((cart, key) => (\r\n\r\n              <div key={cart.id}>\r\n                {\r\n                  ( !cart.isBaseProduct ?\r\n                      <span className=\"cart-interface-title\"> { this.props.interfaces.find( item => item.id === cart.interface_id ).name } </span>\r\n                      : '')\r\n                }\r\n\r\n                <Card className=\"mt-4\" bodyClassName=\"bg-light-gray container\" width={'100%'}\r\n                      >\r\n                  <div className=\"row\">\r\n                    <div className=\"col-6 h-100\">\r\n                      <span className=\"title\"> {cart.product_title} </span>\r\n                      <img src={cart.src} alt={cart.title} className=\"img-fluid\"/>\r\n                    </div>\r\n                    <div className=\"col-6 d-flex flex-column justify-content-between\">\r\n                      <div className=\"d-flex align-items-center\">\r\n                        <img key={key} data-key={key} src={minus} onClick={(e) => {\r\n                          const key = e.target.dataset.key;\r\n\r\n                          this.setState((state) => {\r\n                            if(state.carts[key].quantity) {\r\n                              state.carts[key].quantity--\r\n                            }\r\n                            return state;\r\n                          })\r\n                        }} className=\"svg-icon mr-1 cursor-pointer\" alt=\"\"/>\r\n                        <Input\r\n                            className=\"d-inline-block form-inline\"\r\n                            inputClassName=\"border-none text-center input-right-slider\"\r\n                            labelClassName=\"d-inline-block text-right\"\r\n                            value={cart.quantity}\r\n                            type=\"number\"\r\n                            min={0}\r\n                            max={100}\r\n                            onChange={(e) => handleCartQuantityChangeCallback(e, cart.id)}\r\n                        />\r\n                        <img data-key={key} src={plus} onClick={(e) => {\r\n                          const key = e.target.dataset.key;\r\n\r\n                          this.setState((state) => {\r\n                            state.carts[key].quantity++\r\n\r\n                            return state;\r\n                          })\r\n                        }} className=\"svg-icon mx-1 cursor-pointer\" alt=\"\"/>\r\n                        <span className=\"text-right text-primary flex-grow-1\"> { numberFormat(cart.price * cart.quantity) } </span>\r\n                      </div>\r\n                      {!cart.isBaseProduct &&\r\n                      <button type=\"button\" className=\"btn btn-outline-dark remove-basket\" onClick={() => {\r\n                        removeCardByIdCallback(cart.id);\r\n                        removeKonvaProductImageCallback(cart.product_id);\r\n                      }} >\r\n                        Remove\r\n                      </button> }\r\n                    </div>\r\n                  </div>\r\n                </Card>\r\n              </div>\r\n\r\n\r\n          ))\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRightSidebar.propTypes = {\r\n  sideBarCards: PropTypes.array,\r\n  hideCart: PropTypes.func,\r\n  handleCartQuantityChangeCallback: PropTypes.func,\r\n  removeCardById: PropTypes.func,\r\n  removeKonvaProductImageCallback: PropTypes.func,\r\n};\r\n\r\nexport default connect(mapStateToProps,null, null, {forwardRef: true})(RightSidebar)","import React, {Component, createRef} from 'react';\r\nimport './product.scss';\r\nimport {getResponsiveKonvaSizes} from \"../../../services/helpers/screen\";\r\nimport * as productApi from '../../../services/api/productApi';\r\nimport LoadImage from \"./components/LoadImage\";\r\nimport {Layer, Stage} from \"react-konva\";\r\nimport {findSelectedOrFirst} from \"./helper-actions\";\r\nimport RightSidebar from \"./RightSidebar\";\r\nimport Client from 'shopify-buy';\r\nimport { numberFormat }from \"../../../services/helpers/helper\";\r\n\r\nimport Input from \"../../../components/Form/Input\";\r\n\r\nimport {addSelectProducts,addBaskets, addRef, addInterfaces} from \"../../../redux/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport dot from '../../../images/svg/dot.svg';\r\n\r\n\r\nimport SwiperCore, {Navigation, Pagination, Scrollbar, A11y, Mousewheel} from 'swiper';\r\n\r\nimport {Swiper, SwiperSlide} from 'swiper/react';\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss';\r\nimport 'swiper/components/navigation/navigation.scss';\r\nimport 'swiper/components/pagination/pagination.scss';\r\nimport 'swiper/components/scrollbar/scrollbar.scss';\r\n\r\n// install Swiper components\r\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y, Mousewheel]);\r\n\r\n\r\nclass ShowPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // const konvaSizes = getResponsiveKonvaSizes();\r\n        this.state =    this.initialState;\r\n\r\n        this.existsProductPlusPounts = false;\r\n\r\n        this.interfacesSwiper = createRef();\r\n        this.productsSwiper = createRef();\r\n        this.rightSidebarRef = createRef();\r\n        this.konvaStage = createRef();\r\n\r\n        this.setResponsiveKonvaProduct = this.setResponsiveKonvaProduct.bind(this);\r\n        this.handlePlugItemVariantChange = this.handlePlugItemVariantChange.bind(this);\r\n        this.handleCartQuantityChange = this.handleCartQuantityChange.bind(this);\r\n        this.removeKonvaProductImage = this.removeKonvaProductImage.bind(this);\r\n        this.removeProductPlusPoints = this.removeProductPlusPoints.bind(this);\r\n        this.handleRangePlugSlider = this.handleRangePlugSlider.bind(this);\r\n        this.addProductImage = this.addProductImage.bind(this);\r\n        this.shopifyRedirect = this.shopifyRedirect.bind(this);\r\n        this.removeCardById = this.removeCardById.bind(this);\r\n\r\n    }\r\n\r\n    get initialState() {\r\n\r\n        const konvaSizes = getResponsiveKonvaSizes();\r\n\r\n\r\n        return {\r\n            baseProduct: {},\r\n            selectedProduct: null,\r\n            plugs: [],\r\n            plugSliderCurrentIndex: 0,\r\n            productSliderCurrentIndex: 0,\r\n            selectedPlug: {\r\n                products: [],\r\n                interfaces: [],\r\n            },\r\n            productKonva: {\r\n                stage: {\r\n                    scale: konvaSizes.scale,\r\n                    offset: konvaSizes.offset,\r\n                    width: konvaSizes.width,\r\n                    height: konvaSizes.height,\r\n                },\r\n                images: [],\r\n            },\r\n            sideBarCarts: [],\r\n            productsSwiper: {\r\n                next: {\r\n                    right: 0\r\n                },\r\n                prev: {\r\n                    left: 0\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    shopifyRedirect() {\r\n        const client = Client.buildClient({\r\n            domain: 'uniq-unitcode.myshopify.com',\r\n            storefrontAccessToken: 'd927fe56a95cd4f50e18f1f46ed25258'\r\n        });\r\n\r\n\r\n        const shopifyData = this.state.sideBarCarts.map(\r\n            (variant) => ({variantId: variant.shopify_id, quantity: variant.quantity})\r\n        );\r\n            let checkoutId = '';\r\n            client.checkout.create().then((checkout) => {\r\n                checkoutId = checkout.id;\r\n                client.checkout.addLineItems(checkoutId, shopifyData).then(() => {\r\n                    client.checkout.fetch(checkoutId).then((checkout) => {\r\n                        window.location.assign(checkout.webUrl);\r\n                    });\r\n                }).catch((err) => {\r\n                    if (err) {\r\n                        alert('There is an error to connect with shopify. Please try after some time.');\r\n                    }\r\n                });\r\n            })\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        // You don't have to do this check first, but it can help prevent an unneeded render\r\n        if (nextProps.location.pathname !== this.props.location.pathname) {\r\n            this.setState(this.initialState);\r\n            this.prepareData(nextProps).then(() => {\r\n                this.setResponsiveKonvaProduct()\r\n                this.setPositionProductSwiperBtn()\r\n                this.setSelectedPlug(this.state.selectedPlug)\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.prepareData().then(() => {\r\n            this.setResponsiveKonvaProduct()\r\n            this.setSelectedPlug(this.state.selectedPlug)\r\n        });\r\n\r\n        // .products-swiper .swiper-button-next\r\n\r\n        if (this.productsSwiper.current.swiper) {\r\n            let parent_detals = this.productsSwiper.current.getBoundingClientRect();\r\n            this.setPositionProductSwiperBtn(parent_detals.width)\r\n            this.productsSwiper.current.swiper.on('resize', () => {\r\n                let parent_detals = this.productsSwiper.current.getBoundingClientRect();\r\n                this.setPositionProductSwiperBtn(parent_detals.width)\r\n            })\r\n\r\n        }\r\n\r\n\r\n        this.setResponsiveKonvaProduct();\r\n\r\n        window.addEventListener('resize', this.setResponsiveKonvaProduct);\r\n\r\n    }\r\n\r\n    setPositionProductSwiperBtn() {\r\n        if(this.productsSwiper.current.swiper){\r\n            const swiper = this.productsSwiper.current.swiper,\r\n                width = swiper.width,\r\n                slide_width = 365,\r\n                position = width / 2 - (slide_width / 2) - 44;\r\n\r\n            this.setState((state) => {\r\n                state.productsSwiper.prev.left = position + 'px';\r\n                state.productsSwiper.next.right = position + 'px';\r\n                return state;\r\n            })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n\r\n        // todo: change this  event  on state change\r\n        this.props.addBaskets(this.state.sideBarCarts);\r\n\r\n        this.props.addRef('rightSidebar', this.rightSidebarRef)\r\n\r\n        // this.setResponsiveKonvaProduct()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.addSelectProducts({});\r\n        this.props.addBaskets([]);\r\n        window.removeEventListener('resize', this.setResponsiveKonvaProduct);\r\n    }\r\n\r\n    setProductPlusPoints() {\r\n        this.existsProductPlusPounts = true;\r\n\r\n        this.setState((state) => {\r\n            state.plugs.forEach((plug) => {\r\n                const plugProduct = plug.products.find(\r\n                    product => product.id === this.state.baseProduct.id\r\n                );\r\n                const coordinates = {\r\n                    x: this.state.baseProduct.width * ((plugProduct.pivot.coordinate_x) / 100),\r\n                    y: this.state.baseProduct.height * ((plugProduct.pivot.coordinate_y) / 100),\r\n                };\r\n\r\n                const isBusyPlug = state.productKonva.images.find((konvaImage) => konvaImage.category === plug.name);\r\n\r\n                if (!isBusyPlug) {\r\n                    state.productKonva.images.push({\r\n                        id: plug.id,\r\n                        plugName: plug.name,\r\n                        type: 'plus',\r\n                        src: dot,\r\n                        width: plug.interfaces[0] ? plug.interfaces[0].width :0,\r\n                        height: plug.interfaces[0] ? plug.interfaces[0].height :0,\r\n                        x: coordinates.x,\r\n                        y: coordinates.y,\r\n                    });\r\n                }\r\n            });\r\n\r\n            return state;\r\n        });\r\n    }\r\n\r\n    removeProductPlusPoints() {\r\n        this.existsProductPlusPounts = false;\r\n\r\n        this.setState((state) => {\r\n            state.productKonva.images = state.productKonva.images.filter(\r\n                (image) => image.type !== 'plus'\r\n            );\r\n\r\n            return state;\r\n        });\r\n    }\r\n\r\n    setResponsiveKonvaProduct() {\r\n        if(this.state.baseProduct) {\r\n            const parent = document.getElementById('stage').getClientRects()[0],\r\n                  scale_constant = 1.52222;\r\n\r\n            let parent_width = parent.width;\r\n            let parent_height = parent.height;\r\n\r\n            let product_width = this.state.baseProduct.width + 1800;\r\n            let product_height = this.state.baseProduct.height + 700;\r\n\r\n            let scale =((parent_width ) / product_width) / scale_constant;\r\n\r\n            if( (product_height * scale)  > parent_height) {\r\n                scale =  ((parent_height / product_height)) / scale_constant;\r\n            }\r\n\r\n            let offsetX = parent_width/scale/2 - (this.state.baseProduct.width/2)*scale_constant ;//(parent_width/scale) / 2;\r\n            let offsetY = ((parent_height/scale)/2) -  ((this.state.baseProduct.height/2))*scale_constant;\r\n            if(offsetX < 0) {\r\n                offsetX = -1 * offsetX\r\n            }\r\n            if(offsetY < 0) {\r\n                offsetY = -1 * offsetY\r\n            }\r\n\r\n            const konvaSizes = {\r\n                scale: { x : scale , y : scale },\r\n                offset: { x: -offsetX, y : -offsetY },\r\n                width: parent_width ,\r\n                height: parent_height\r\n            };\r\n            this.setState((state) => {\r\n                state.productKonva.stage.scale = konvaSizes.scale;\r\n                state.productKonva.stage.offset = konvaSizes.offset;\r\n                state.productKonva.stage.width = konvaSizes.width;\r\n                state.productKonva.stage.height = konvaSizes.height;\r\n                state.productKonva.show = true;\r\n                return state;\r\n            });\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    prepareData(props) {\r\n        return Promise.all([\r\n            productApi.showProduct(props ? props.match.params.productId : this.props.match.params.productId),\r\n            productApi.getProductPlugs(props ? props.match.params.productId : this.props.match.params.productId),\r\n        ]).then((data) => {\r\n            this.setState((state) => {\r\n                state.baseProduct = data[0];\r\n                this.props.addSelectProducts(data[0]);\r\n                this.props.addInterfaces(data[1]);\r\n                state.selectedProduct = data[0];\r\n                state.plugs = data[1];\r\n                state.selectedPlug = data[1][0];\r\n                state.productKonva.images.push({\r\n                    id: findSelectedOrFirst(this.state.baseProduct.variants).id,\r\n                    product_id: state.baseProduct.id,\r\n                    src: findSelectedOrFirst(this.state.baseProduct.variants).src,\r\n                    width: this.state.baseProduct.width,\r\n                    height: this.state.baseProduct.height,\r\n                });\r\n\r\n                state.sideBarCarts.push({\r\n                    id: state.baseProduct.id,\r\n                    shopify_id: findSelectedOrFirst(state.baseProduct.variants).shopify_id,\r\n                    src: findSelectedOrFirst(state.baseProduct.variants).src,\r\n                    title: findSelectedOrFirst(state.baseProduct.variants).title,\r\n                    product_title: state.baseProduct.title,\r\n                    quantity: 1,\r\n                    price: findSelectedOrFirst(state.baseProduct.variants).price,\r\n                    x:0,\r\n                    y:0,\r\n                    isBaseProduct: true,\r\n                });\r\n\r\n                return state;\r\n            });\r\n        });\r\n    }\r\n\r\n    addProductImage(product) {\r\n\r\n        this.setState((state) => {\r\n            state.selectedProduct = product;\r\n            const variant = findSelectedOrFirst(product.variants);\r\n            const productCoordinates = this.calculateCoordinates();\r\n            const image = {\r\n                id: variant.id,\r\n                product_id: product.id,\r\n                src: variant.src,\r\n                width: product.width,\r\n                height: product.height,\r\n                x: productCoordinates.x,\r\n                y: productCoordinates.y,\r\n                category: this.state.selectedPlug.name\r\n            };\r\n            const imageIndex = state.productKonva.images.findIndex(\r\n                image => image.category === this.state.selectedPlug.name\r\n            );\r\n\r\n            if (imageIndex !== -1) {\r\n                state.productKonva.images.splice(imageIndex, 1, image);\r\n            } else {\r\n                state.productKonva.images.push(image);\r\n            }\r\n\r\n            const cartIndex = state.sideBarCarts.findIndex(\r\n                (cart) => (cart.product_id === product.id) || (cart.interface_id === product.pivot.interface_id)\r\n            );\r\n            const cart = {\r\n                id: variant.id,\r\n                product_id: product.id,\r\n                shopify_id: variant.shopify_id,\r\n                title: variant.title,\r\n                product_title: product.title,\r\n                src: variant.src,\r\n                quantity: 1,\r\n                price: variant.price,\r\n                interface_id: product.pivot.interface_id,\r\n            };\r\n            if (cartIndex !== -1) {\r\n                state.sideBarCarts.splice(cartIndex, 1, cart);\r\n            } else {\r\n                state.sideBarCarts.push(cart);\r\n            }\r\n\r\n            const productPlusIndex = state.productKonva.images.findIndex(i => i.plugName === state.selectedPlug.name);\r\n            if (productPlusIndex !== -1) {\r\n                state.productKonva.images.splice(productPlusIndex, 1);\r\n            }\r\n\r\n            return state;\r\n        });\r\n    }\r\n\r\n    calculateCoordinates() {\r\n        const selectedPlugProduct = this.state.selectedPlug.products.find(\r\n            product => product.id === this.state.baseProduct.id\r\n        );\r\n\r\n        const coordinates = {\r\n            x: this.state.baseProduct.width * ((selectedPlugProduct.pivot.coordinate_x) / 100),\r\n            y: this.state.baseProduct.height * ((selectedPlugProduct.pivot.coordinate_y) / 100),\r\n        };\r\n        coordinates.x += this.state.selectedProduct.width * (this.state.selectedProduct.pivot.coordinate_x / 100);\r\n        coordinates.y += this.state.selectedProduct.height * (this.state.selectedProduct.pivot.coordinate_y / 100);\r\n\r\n        return coordinates;\r\n    }\r\n\r\n    setSelectedPlug(plug) {\r\n        this.setState((state) => {\r\n            state.selectedPlug = plug;\r\n            state.plugSliderCurrentIndex = state.plugs.findIndex(p => p.id === plug.id);\r\n            return state;\r\n        }, () => {\r\n            this.interfacesSwiper.current.swiper.slideToLoop(this.state.plugSliderCurrentIndex);\r\n        });\r\n    }\r\n\r\n    handleProductPlugClick(image) {\r\n        if (image.type === 'plus') {\r\n            const plug = this.state.plugs.find(plug => plug.id === image.id);\r\n            this.setSelectedPlug(plug);\r\n        } else {\r\n            const konvaImage = this.state.productKonva.images.find((i) => i.id === image.id);\r\n            const plug = this.state.plugs.find((plug) => plug.name === konvaImage.category);\r\n\r\n            if (plug) {\r\n                this.setSelectedPlug(plug);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleMouseEnter(image) {\r\n        if (!this.existsProductPlusPounts) {\r\n            this.setProductPlusPoints();\r\n        }\r\n\r\n        if (image.product_id !== this.state.baseProduct.id) {\r\n            document.body.style.cursor = 'pointer';\r\n            this.setState((state) => {\r\n                state.productKonva.images.forEach((productKonvaImage) => {\r\n                    if (productKonvaImage.product_id !== state.baseProduct.id && productKonvaImage.id !== image.id && productKonvaImage.type !== 'plus' && image.type !== 'plus') {\r\n                        productKonvaImage.opacity = 0.5;\r\n                    }\r\n                });\r\n\r\n                return state;\r\n            });\r\n        } else if (image.product_id === this.state.baseProduct.id) {\r\n            // this.setProductPlusPoints();\r\n        }\r\n    }\r\n\r\n    handleMouseLeave(image) {\r\n        if (image.product_id !== this.state.baseProduct.id) {\r\n            document.body.style.cursor = 'default';\r\n            this.setState((state) => {\r\n                state.productKonva.images.forEach((productKonvaImage) => {\r\n                    if (productKonvaImage.product_id !== state.baseProduct.id && productKonvaImage.id !== image.id && productKonvaImage.type !== 'plus' && image.type !== 'plus') {\r\n                        productKonvaImage.opacity = 1;\r\n                    }\r\n                });\r\n\r\n                return state;\r\n            });\r\n        } else if (image.product_id === this.state.baseProduct.id) {\r\n            // this.removeProductPlusPoints();\r\n        }\r\n    }\r\n\r\n    handleCartQuantityChange(e, cartId) {\r\n        const value = e.target.value;\r\n\r\n        if (value >= 0 && value <= 100) {\r\n            this.setState((state) => {\r\n                state.sideBarCarts.find(cart => cart.id === cartId).quantity = value;\r\n                return state;\r\n            });\r\n        }\r\n    }\r\n\r\n    handlePlugItemVariantChange(imageId, product) {\r\n        this.setState((state) => {\r\n            state.selectedPlug.interfaces.forEach((product) => {\r\n                product.variants.forEach((variant) => {\r\n                    return variant.selected = (variant.id === imageId)\r\n                });\r\n            });\r\n\r\n            return state;\r\n        }, () => {\r\n            const productImageIndex = this.state.productKonva.images.findIndex(image => image.product_id === product.id);\r\n\r\n            if (product && productImageIndex !== -1) {\r\n                this.addProductImage(product);\r\n            }\r\n        });\r\n    }\r\n\r\n    checkImageSelection(images, key, image_id) {\r\n        let selected = images.filter(image => (image.selected === true));\r\n        if (selected.length) {\r\n            return (selected[0].id === image_id);\r\n        } else if (!selected.length && key === 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    getSelectedVariant(variants) {\r\n        let selected = variants.filter(variant => (variant.selected === true));\r\n        if (selected.length) {\r\n            return  selected[0];\r\n        } else return  variants[0];\r\n    }\r\n\r\n    checkProductKonva(product) {\r\n        return this.state.productKonva.images.filter(image => (image.product_id === product.id)).length ? true : false;\r\n    }\r\n\r\n    handleRangePlugSlider(e) {\r\n        const index = e.target.value;\r\n        this.setState({\r\n            plugSliderCurrentIndex: Number(index),\r\n        }, () => {\r\n            this.plugRef.slickGoTo(this.state.plugSliderCurrentIndex);\r\n        });\r\n    }\r\n\r\n    handleRangeProductSlider(e) {\r\n        const index = e.target.value;\r\n        this.setState({\r\n            productSliderCurrentIndex: Number(index),\r\n        }, () => {\r\n            this.productsSwiper.current.swiper.slideTo(this.state.productSliderCurrentIndex)\r\n        });\r\n    }\r\n\r\n    removeCardById(cartId) {\r\n        this.setState((state) => {\r\n            const sideBarCartsIndex = state.sideBarCarts.findIndex((cart) => cart.id === cartId);\r\n            state.sideBarCarts.splice(sideBarCartsIndex, 1);\r\n\r\n            return state;\r\n        });\r\n    }\r\n\r\n    removeKonvaProductImage(product_id, imageId) {\r\n\r\n        this.setState((state) => {\r\n            const index = state.productKonva.images.findIndex(\r\n                (image) => image.product_id === product_id\r\n            );\r\n            state.plugs.find((plug) => plug.name === state.productKonva.images[index].category);\r\n            state.productKonva.images.splice(index, 1);\r\n\r\n            return state;\r\n        });\r\n    }\r\n\r\n    renderPlugs() {\r\n        const {plugs} = this.state;\r\n\r\n        return (\r\n            <div className=\"row product-interfaces\">\r\n                <div className=\"col-lg-8 col-12 offset-lg-2 offset-0\">\r\n                    <Swiper\r\n                        spaceBetween={1}\r\n                        slidesPerView={3}\r\n                        centeredSlides={true}\r\n                        centeredSlidesBounds={false}\r\n                        loop={true}\r\n                        roundLengths={true}\r\n                        slideToClickedSlide={true}\r\n                        onSlideChange={(swiper) => this.setSelectedPlug(this.state.plugs[swiper.realIndex])}\r\n                        ref={this.interfacesSwiper}\r\n                        breakpoints={{\r\n                            1199: {\r\n                                slidesPerView: 7,\r\n                                centeredSlides: true,\r\n                            }\r\n                        }}\r\n                    >\r\n                        {plugs.map((plug) =>\r\n                            <SwiperSlide key={plug.id}>\r\n                                <div className='blue-line-top'></div>\r\n                                <div className=\"text-center p-2\" key={plug.id}>\r\n                                    {plug.name}\r\n                                </div>\r\n                            </SwiperSlide>\r\n                        )}\r\n                    </Swiper>\r\n                </div>\r\n                {this.state.selectedPlug &&\r\n                <div className=\"col-2 my-2 scroll-range-wrapper\">\r\n                    <div className=\"d-flex align-items-center justify-content-center\">\r\n                        <span\r\n                            className='text-small'>{this.state.productSliderCurrentIndex + 1}/{this.state.selectedPlug.interfaces.length}</span>\r\n                        <Input\r\n                            inputClassName=\"scroll-range-input cursor-pointer\"\r\n                            onChange={(e) => this.handleRangeProductSlider(e)}\r\n                            value={this.state.productSliderCurrentIndex}\r\n                            type=\"range\"\r\n                            min={0}\r\n                            max={this.state.selectedPlug.interfaces.length - 1}\r\n                        />\r\n                    </div>\r\n                </div>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    renderSelectedPlugItems() {\r\n\r\n        if (this.state.selectedPlug) {\r\n            return (\r\n                <div className=\"row\">\r\n                    <div className={`col-12 p-0 mx-auto products-swiper`}>\r\n                        <Swiper\r\n                            centeredSlides={true}\r\n                            slidesPerView={'auto'}\r\n                            slideToClickedSlide={true}\r\n                            autoHeight={true}\r\n                            direction={'horizontal'}\r\n                            mousewheel={{\r\n                                invert: true,\r\n                                releaseOnEdges: true,\r\n                                sensitivity: 10\r\n                            }}\r\n                            speed={200}\r\n                            ref={this.productsSwiper}\r\n                            breakpoints={{\r\n                                568: {\r\n                                    centeredSlides:true,\r\n                                    direction:'horizontal'\r\n                                },\r\n                                768: {\r\n                                    centeredSlides:true,\r\n                                    direction:'vertical'\r\n                                },\r\n                                1199: {\r\n                                    centeredSlides:true,\r\n                                    direction:'horizontal'\r\n                                }\r\n                            }}\r\n                            onSlideChange={ (swiper) => {\r\n                                this.setState({productSliderCurrentIndex:swiper.realIndex})\r\n                            }}\r\n                            navigation={{\r\n                                nextEl: '.products-swiper .swiper-button-next',\r\n                                prevEl: '.products-swiper .swiper-button-prev',\r\n                            }}\r\n                        >\r\n                            <button style={{left: this.state.productsSwiper.prev.left}} className=\"swiper-button-prev\">\r\n                            </button>\r\n                            {this.state.selectedPlug.interfaces.map((product) => (\r\n                                <SwiperSlide key={product.id} className=\"flex-column h-100 button-change\">\r\n                                    <div className=\"position-relative text-center c-body m-auto\">\r\n                                        <div className=\"position-relative mt-auto text-center\">\r\n                                            <div className=\"d-flex flex-column bg-card\">\r\n                                                <span className=\"title-t\">Strike Industries</span>\r\n                                                <span title={ product.title } className=\"title\"> { product.title } </span>\r\n                                                <div className=\"img-block\">\r\n                                                    <img style={{height: \"150px\"}}\r\n                                                         src={this.getSelectedVariant(product.variants).src}\r\n                                                         alt={product.title}\r\n                                                         className=\"img\"/>\r\n                                                </div>\r\n                                                <span className=\"title-s\">{ product.title }</span>\r\n                                                <span className=\"price-s\">{ numberFormat(findSelectedOrFirst(product.variants).price)}</span>\r\n                                                <div className={`variants flex-column text-left px-3 ${(product.variants.length < 2) ? 'invisible' : ''}`}>\r\n                                                    <span>Color</span>\r\n                                                    <div className={`d-flex flex-wrap ${product.variants.length%5 == 0 ? 'justify-content-between':''}`} >\r\n                                                        {product.variants.map((variant, key) => (\r\n                                                            <button key={variant.id} className={`color-btn\r\n                                                           ${ (this.checkImageSelection(product.variants, key, variant.id)) ? \"active-color\" : \"\"}`}\r\n                                                                    style={{\r\n                                                                        background: variant.title\r\n                                                                    }}\r\n                                                                    onClick={ () => this.handlePlugItemVariantChange(variant.id, product)}/>))}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"w-100 btn-order position-relative\">\r\n                                            {!this.checkProductKonva(product) ?\r\n                                                <button\r\n                                                    className=\"btn button-product bg-blue-custom\"\r\n                                                    onClick={() => this.addProductImage(product)}>\r\n                                                    Equip +{ numberFormat(findSelectedOrFirst(product.variants).price)}\r\n                                                </button>\r\n                                                : <button\r\n                                                    className=\"btn button-product bg-red-custom\"\r\n                                                    onClick={() => (this.removeKonvaProductImage(product.id), this.removeCardById(product))}>\r\n                                                    Remove -{ numberFormat(findSelectedOrFirst(product.variants).price)}\r\n                                                </button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </SwiperSlide>\r\n                            ))}\r\n                            <button style={{right: this.state.productsSwiper.next.right}} className=\"swiper-button-next\">\r\n                            </button>\r\n                        </Swiper>\r\n\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        const {productKonva: {stage, images,show}, sideBarCarts} = this.state;\r\n\r\n        return (\r\n            <div className=\"container-fluid product-show-page\">\r\n                <div className=\"row h-100 flex-lg-column-reverse flex-md-row-reverse flex-column-reverse\">\r\n                    <div className=\"col-xl-12 col-md-5 col-12 p-0 plug-and-plug-items-wrapper\">\r\n                        <div className='container-fluid'>\r\n                            {this.renderPlugs()}\r\n                            {this.renderSelectedPlugItems()}\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"stage\" className=\"col-xl-12 col-md-7 col-12 d-flex justify-content-center\">\r\n                        {show ?\r\n                            <Stage width={stage.width}\r\n                                   height={stage.height}\r\n                                   scale={stage.scale}\r\n                                   offset={stage.offset}\r\n                                   ref={this.konvaStage}\r\n                                   onMouseLeave={this.removeProductPlusPoints}>\r\n                                <Layer>\r\n                                    {\r\n                                        images.map((image) => (\r\n                                            <LoadImage\r\n                                                key={image.id}\r\n                                                src={image.src}\r\n                                                x={image.x}\r\n                                                y={image.y}\r\n                                                opacity={image.opacity}\r\n                                                clickCallback={() => this.handleProductPlugClick(image)}\r\n                                                onMouseEnterCallback={() => this.handleMouseEnter(image)}\r\n                                                onMouseLeaveCallback={() => this.handleMouseLeave(image)}\r\n                                            />\r\n                                        ))\r\n                                    }\r\n                                </Layer>\r\n                            </Stage>\r\n                            : null}\r\n                    </div>\r\n                </div>\r\n                <RightSidebar\r\n                    carts={sideBarCarts}\r\n                    handleCartQuantityChangeCallback={(e, cartId) => this.handleCartQuantityChange(e, cartId)}\r\n                    removeCardByIdCallback={(cartId) => this.removeCardById(cartId)}\r\n                    removeKonvaProductImageCallback={(product_id) => this.removeKonvaProductImage(product_id)}\r\n                    checkoutCallback={this.shopifyRedirect}\r\n                    ref={this.rightSidebarRef}\r\n                />\r\n            </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    {addInterfaces, addSelectProducts, addBaskets, addRef}\r\n)(ShowPage);\r\n\r\n","import Product from \"./Product\";\r\n\r\nexport default Product;","import React, { Component } from 'react';\r\nimport IndexPage from \"./IndexPage\";\r\nimport ShowPage from \"./ShowPage\";\r\nimport './product.scss';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Product extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.pageType === 'index') {\r\n      return <IndexPage {...this.props}/>;\r\n    } else if (this.props.pageType === 'show') {\r\n      return <ShowPage {...this.props}/>;\r\n    }\r\n  }\r\n}\r\n\r\nProduct.propTypes = {\r\n  pageType: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Product;\r\n","import React, { Component } from 'react';\r\nimport * as categoryApi from \"../../services/api/categoryApi\";\r\nimport './category.scss';\r\nimport Product from \"./Product\";\r\nimport Select from 'react-select'\r\nimport { addCategories } from \"../../redux/actions\";\r\nimport connect from \"react-redux/es/connect/connect\";\r\n\r\nconst mapStateToProps = state => {\r\n    const categories = state.categories.list ? state.categories.list : {};\r\n    return { categories };\r\n};\r\nclass Category extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      categories: this.props.categories ? this.props.categories :{},\r\n      category: this.props.categories.length ? this.props.categories[0]: {\r\n        products: [],\r\n      },\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n      // You don't have to do this check first, but it can help prevent an unneeded render\r\n      if (nextProps.categories) {\r\n          this.setState(state => {\r\n              state.categories = nextProps.categories;\r\n              state.category = nextProps.categories[0]\r\n          });\r\n      }\r\n  }\r\n  // componentDidMount() {\r\n  //     this.setState(state => {\r\n  //         state.categories =  this.props.categories ? this.props.categories :{};\r\n  //         state.category = this.props.categories.length ?this.props.categories: {\r\n  //             products: [],\r\n  //         }\r\n  //     });\r\n  // }\r\n\r\n  handleClick(category) {\r\n    this.setState({category});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid my-2 category\">\r\n        <div className=\"row justify-content-center align-items-center\">\r\n            <div className=\"w-25 h-100\">\r\n                <Select\r\n                        options={this.state.categories}\r\n                        value={this.state.category}\r\n                        onChange={(category) => this.handleClick(category)}\r\n                        getOptionLabel={option =>`${option.name}`}\r\n                        getOptionValue={option => `${option.name}`}\r\n                         />\r\n            </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            {this.state.category.products.length ?\r\n              <Product pageType=\"index\"\r\n                       products={this.state.category.products}\r\n                       categoryId={this.state.category.id}/>\r\n              : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(Category);","import CategorySwitch from \"./CategorySwitch\";\r\n\r\nexport default CategorySwitch;","import React, { Component } from 'react';\r\nimport Category from \"./Category\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CategorySwitch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.props = props;\r\n  }\r\n\r\n  render() {\r\n    return <Category />;\r\n  }\r\n}\r\n\r\nCategorySwitch.propTypes = {\r\n  pageType: PropTypes.string,\r\n};\r\n\r\nexport default CategorySwitch;","import React, { Component, Fragment } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from \"./layout/Header\";\r\nimport CategorySwitch from \"./containers/Category\";\r\nimport CategoryProduct from \"./containers/Category/Product\";\r\nimport './sass/App.scss';\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n            <BrowserRouter>\r\n                <Fragment>\r\n                    <Header/>\r\n                    <Switch>\r\n                        <Route exact path=\"(/|/category)\" render={(props) => <CategorySwitch {...props}/>}/>\r\n                        <Route exact path=\"/category/:id\" render={(props) => <CategorySwitch {...props}/>}/>\r\n                        <Route exact path=\"/category/:categoryId/product/:productId\"\r\n                               render={(props) => <CategoryProduct pageType=\"show\" {...props}/>}/>\r\n                    </Switch>\r\n                </Fragment>\r\n            </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\nconst initialState = {\n\n};\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case \"ADD_SELECT_PRODUCT\": {\n            return {\n                selectedProduct: action.selectedProduct,\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n","\nconst initialState = {\n\n};\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case \"ADD_CATEGORIES\": {\n            return {\n                list : action.categories,\n            };\n        }\n\n        default:\n            return state;\n    }\n}\n","\nconst initialState = {\n    list:[]\n};\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case \"ADD_BASKETS\": {\n            return {\n                list:action.baskets\n            };\n        }\n\n        default:\n            return state;\n    }\n}","\nconst initialState = {\n    list:{}\n};\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case \"ADD_REF\": {\n            return {\n                list: {...state.list, ...{ [action.name] : action.ref}}\n            };\n        }\n\n        default:\n            return state;\n    }\n}","\nconst initialState = {\n    interfaces: {}\n};\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case \"ADD_INTERFACES\": {\n            return action.interfaces;\n        }\n\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport products from \"./products\";\nimport categories from \"./categories\";\nimport baskets from \"./baskets\";\nimport components from \"./components\";\nimport interfaces from \"./interfaces\";\n\nexport default combineReducers({ products,categories,baskets, components,interfaces });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nexport default createStore(rootReducer);\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\n\r\nReactDOM.render( <Provider store={store}>\r\n            <App />\r\n    </Provider>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.f3d9780f.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.9522e939.svg\";","module.exports = __webpack_public_path__ + \"static/media/add.ff4f58d5.svg\";","module.exports = __webpack_public_path__ + \"static/media/sort.826593c8.svg\";","module.exports = __webpack_public_path__ + \"static/media/add_alternative.34756163.svg\";","module.exports = __webpack_public_path__ + \"static/media/custom.f49836f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/message.d6a2e58d.svg\";","module.exports = __webpack_public_path__ + \"static/media/transfer.1479fa6d.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.b4700fbe.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus-s.95c1775a.svg\";","module.exports = __webpack_public_path__ + \"static/media/left-arrow.d2ac9c94.svg\";","module.exports = __webpack_public_path__ + \"static/media/dot.e7d5a092.svg\";","module.exports = __webpack_public_path__ + \"static/media/minus.7461adbb.svg\";"],"sourceRoot":""}